fullnameOverride: "collector"

mode: "deployment"

replicaCount: 1

config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:4317
        http:
          endpoint: ${env:MY_POD_IP}:4318
          cors:
            allowed_origins:
              - http://*
              - https://*
    hostmetrics:
      collection_interval: 10s
      scrapers:
        paging:
          metrics:
            system.paging.utilization:
              enabled: true
        cpu:
          metrics:
            system.cpu.utilization:
              enabled: true
        disk:
        filesystem:
          metrics:
            system.filesystem.utilization:
              enabled: true
        load:
        memory:
        network:
        processes:
    prometheus:
      config:
        scrape_configs:
          - job_name: "opentelemetry-collector"
            scrape_interval: 10s
            static_configs:
              - targets: ["${env:MY_POD_IP}:8888"]
          - job_name: "opentelemetry-rr"
            scrape_interval: 10s
            static_configs:
              - targets: ["php-svc.default:2112"]

  processors:
    batch:
      send_batch_max_size: 100
      send_batch_size: 10
      timeout: 10s

  exporters:
    logging:
      loglevel: info

    datadog:
      api:
        site: us5.datadoghq.com
        key: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

  service:
    telemetry:
      logs:
        level: "info"
      metrics:
        address: ${env:MY_POD_IP}:8888
    pipelines:
      metrics:
        receivers: [hostmetrics, prometheus, otlp]
        processors: [batch]
        exporters: [datadog]
      traces:
        receivers: [otlp]
        processors: [batch]
        exporters: [datadog]
      logs:
        receivers: [otlp]
        processors: [batch]
        exporters: [datadog]

image:
  repository: otel/opentelemetry-collector-contrib
  pullPolicy: Always

command:
  name: otelcol-contrib
  extraArgs: []

serviceAccount:
  create: true
  annotations: {}

clusterRole:
  create: true
  rules:
    - apiGroups:
        - ""
      resources:
        - "pods"
        - "nodes"
      verbs:
        - "get"
        - "list"
        - "watch"

# Configuration for ports
ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    hostPort: 4317
    protocol: TCP
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
    hostPort: 4318
    protocol: TCP
  metrics:
    enabled: true
    containerPort: 8888
    servicePort: 8888
    protocol: TCP
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false

resources:
  limits:
    cpu: 256m
    memory: 512Mi

service:
  type: ClusterIP

ingress:
  enabled: false

podMonitor:
  enabled: true
  metricsEndpoints:
    - port: metrics
      path: /metrics
  extraLabels:
    release: monitoring

serviceMonitor:
  enabled: true
  metricsEndpoints:
    - port: metrics
      path: /metrics
  extraLabels:
    release: monitoring

prometheusRule:
  enabled: true
  defaultRules:
    enabled: true
