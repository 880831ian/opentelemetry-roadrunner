apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  namespace: default
  labels:
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "php"
    tags.datadoghq.com/version: "demo"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
        tags.datadoghq.com/env: "dev"
        tags.datadoghq.com/service: "php"
        tags.datadoghq.com/version: "demo"
    spec:
      containers:
        - name: php
          image: 880831ian/rr-otel:demo
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 2112
          command: ["rr", "serve"]
          env:
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "http/protobuf"
            - name: OTEL_SERVICE_NAME
              value: "php"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://collector.opentelemetry:4318"
            - name: OTEL_PHP_TRACES_PROCESSOR
              value: "batch"
            - name: OTEL_PHP_AUTOLOAD_ENABLED
              value: "true"
            - name: OTEL_PHP_DETECTORS
              value: "all"
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
---
apiVersion: v1
kind: Service
metadata:
  name: php-svc
  namespace: default
spec:
  selector:
    app: php
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: metrics
      protocol: TCP
      port: 2112
      targetPort: 2112

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: nginx.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-svc
                port:
                  number: 80
    - host: php.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: php-svc
                port:
                  number: 80
